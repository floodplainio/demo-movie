version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build:
    # Remove if parallelism is not desired
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx1g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      PIPELINE_NUMBER: <<pipeline.number>>
    machine:
      image: ubuntu-2004:202010-01
    resource_class: medium
    steps: # a collection of executable commands
      - run:
          name: Pre-install
          command: |
            sudo add-apt-repository ppa:openjdk-r/ppa
            sudo apt-get update
            sudo apt-get install -y openjdk-11-jdk
            java -version
            sudo update-java-alternatives --set java-1.11.0-openjdk-amd64
            java -version
      - run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash
      - checkout # check out source code to working directory
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - run:
          name: Run tests in parallel # See: https://circleci.com/docs/2.0/parallelism-faster-jobs/
          # Use "./gradlew test" instead if tests are not run in parallel
          command: |
            ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true -Dquarkus.native.container-runtime=docker
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - run:
          command: fossa
          working_directory: ~
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - run:
          name: Upload to central
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
            docker build -f src/main/docker/Dockerfile.native-micro -t floodplain/demo-movie .
            docker push floodplain/demo-movie:latest

workflows:
  version: 2
  workflow:
    jobs:
      - build
